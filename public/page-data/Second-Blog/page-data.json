{"componentChunkName":"component---src-templates-blog-post-js","path":"/Second-Blog/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"2bdaf3ed-5c54-58a5-a14d-7f2392f7aff8","excerpt":"Introduction This blog will help you learn about pipx commands and will give you a description of what each command does. Pipx is a really simple and powerfulâ€¦","html":"<h2>Introduction</h2>\n<p>This blog will help you learn about pipx commands and will give you a description of what each command does. Pipx is a really simple and powerful tool for running commands as an executable from an isolated environment. Those commands should be associated with a python package that has CLI. In pipx, we install the package once and we can use the package anywhere on our system isolated from other virtual environments.</p>\n<h2>How to Install Pipx</h2>\n<p>It is very simple to install. All you will need to do is navigate to your terminal and type <code class=\"language-text\">pip install pipx</code>.</p>\n<p>You can check if it is installed by running <code class=\"language-text\">pipx --version</code>. If you do not get an error then you have successfully installed pipx.</p>\n<h2>Primary Commands</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  PIPX_HOME              Overrides default pipx location<span class=\"token punctuation\">.</span> Virtual Environments\r\n                        will be installed to $PIPX_HOME<span class=\"token operator\">/</span>venvs<span class=\"token punctuation\">.</span>\r\n  PIPX_GLOBAL_HOME       Used instead of PIPX_HOME when the `<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token keyword\">global</span>` option\r\n                        <span class=\"token keyword\">is</span> given<span class=\"token punctuation\">.</span>\r\n  PIPX_BIN_DIR           Overrides location of app installations<span class=\"token punctuation\">.</span> Apps are\r\n                        symlinked <span class=\"token keyword\">or</span> copied here<span class=\"token punctuation\">.</span>\r\n  PIPX_GLOBAL_BIN_DIR    Used instead of PIPX_BIN_DIR when the `<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token keyword\">global</span>`\r\n                        option <span class=\"token keyword\">is</span> given<span class=\"token punctuation\">.</span>\r\n  PIPX_MAN_DIR           Overrides location of manual pages installations<span class=\"token punctuation\">.</span>\r\n                        Manual pages are symlinked <span class=\"token keyword\">or</span> copied here<span class=\"token punctuation\">.</span>\r\n  PIPX_GLOBAL_MAN_DIR    Used instead of PIPX_MAN_DIR when the `<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token keyword\">global</span>`\r\n                        option <span class=\"token keyword\">is</span> given<span class=\"token punctuation\">.</span>\r\n  PIPX_DEFAULT_PYTHON    Overrides default python used <span class=\"token keyword\">for</span> commands<span class=\"token punctuation\">.</span>\r\n  USE_EMOJI              Overrides emoji behavior<span class=\"token punctuation\">.</span> Default value varies based\r\n                        on platform<span class=\"token punctuation\">.</span>\r\n  PIPX_HOME_ALLOW_SPACE  Overrides default warning on spaces <span class=\"token keyword\">in</span> the home path\r\n\r\noptions<span class=\"token punctuation\">:</span>\r\n  <span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">help</span>            show this <span class=\"token builtin\">help</span> message <span class=\"token keyword\">and</span> exit\r\n  <span class=\"token operator\">-</span><span class=\"token operator\">-</span>quiet<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>q           Give less output<span class=\"token punctuation\">.</span> May be used multiple times\r\n                        corresponding to the ERROR <span class=\"token keyword\">and</span> CRITICAL logging\r\n                        levels<span class=\"token punctuation\">.</span> The count maxes out at <span class=\"token number\">2.</span>\r\n  <span class=\"token operator\">-</span><span class=\"token operator\">-</span>verbose<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>v         Give more output<span class=\"token punctuation\">.</span> May be used multiple times\r\n                        corresponding to the INFO<span class=\"token punctuation\">,</span> DEBUG <span class=\"token keyword\">and</span> NOTSET logging\r\n                        levels<span class=\"token punctuation\">.</span> The count maxes out at <span class=\"token number\">3.</span>\r\n  <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token keyword\">global</span>              Perform action globally <span class=\"token keyword\">for</span> <span class=\"token builtin\">all</span> users<span class=\"token punctuation\">.</span>\r\n  <span class=\"token operator\">-</span><span class=\"token operator\">-</span>version             Print version <span class=\"token keyword\">and</span> exit\r\n\r\nsubcommands<span class=\"token punctuation\">:</span>\r\n  Get <span class=\"token builtin\">help</span> <span class=\"token keyword\">for</span> commands <span class=\"token keyword\">with</span> pipx COMMAND <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">help</span>\r\n    install             Install a package\r\n    install<span class=\"token operator\">-</span><span class=\"token builtin\">all</span>         Install <span class=\"token builtin\">all</span> packages\r\n    uninject            Uninstall injected packages <span class=\"token keyword\">from</span> an existing Virtual\r\n                        Environment\r\n    inject              Install packages into an existing Virtual Environment\r\n    pin                 Pin the specified package to prevent it <span class=\"token keyword\">from</span> being\r\n                        upgraded\r\n    unpin               Unpin the specified package\r\n    upgrade             Upgrade a package\r\n    upgrade<span class=\"token operator\">-</span><span class=\"token builtin\">all</span>         Upgrade <span class=\"token builtin\">all</span> packages<span class=\"token punctuation\">.</span> Runs `pip install <span class=\"token operator\">-</span>U <span class=\"token operator\">&lt;</span>pkgname<span class=\"token operator\">></span>`\r\n                        <span class=\"token keyword\">for</span> each package<span class=\"token punctuation\">.</span>\r\n    upgrade<span class=\"token operator\">-</span>shared      Upgrade shared libraries<span class=\"token punctuation\">.</span>\r\n    uninstall           Uninstall a package\r\n    uninstall<span class=\"token operator\">-</span><span class=\"token builtin\">all</span>       Uninstall <span class=\"token builtin\">all</span> packages\r\n    reinstall           Reinstall a package\r\n    reinstall<span class=\"token operator\">-</span><span class=\"token builtin\">all</span>       Reinstall <span class=\"token builtin\">all</span> packages\r\n    <span class=\"token builtin\">list</span>                List installed packages\r\n    interpreter         Interact <span class=\"token keyword\">with</span> interpreters managed by pipx\r\n    run                 Download the latest version of a package to a\r\n                        temporary virtual environment<span class=\"token punctuation\">,</span> then run an app <span class=\"token keyword\">from</span>\r\n                        it<span class=\"token punctuation\">.</span> Also compatible <span class=\"token keyword\">with</span> local `__pypackages__`\r\n                        directory <span class=\"token punctuation\">(</span>experimental<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\r\n    runpip              Run pip <span class=\"token keyword\">in</span> an existing pipx<span class=\"token operator\">-</span>managed Virtual\r\n                        Environment\r\n    ensurepath          Ensure directories necessary <span class=\"token keyword\">for</span> pipx operation are <span class=\"token keyword\">in</span>\r\n                        your PATH environment variable<span class=\"token punctuation\">.</span>\r\n    environment         Print a <span class=\"token builtin\">list</span> of environment variables <span class=\"token keyword\">and</span> paths used\r\n                        by pipx<span class=\"token punctuation\">.</span>\r\n    completions         Print instructions on enabling shell completions <span class=\"token keyword\">for</span>\r\n                        pipx</code></pre></div>\n<p>You can also find this list of commands inside of your terminal by typing <code class=\"language-text\">pipx -h</code>.</p>","frontmatter":{"title":"Pipx Commands and How to Use Them","date":"November 11, 2024","description":"This is a description of commands that you can use in Pipx and what these commands will do."}},"previous":{"fields":{"slug":"/Third-Blog/"},"frontmatter":{"title":"Quick Tutorial on How to Install VS-Code"}},"next":null},"pageContext":{"id":"2bdaf3ed-5c54-58a5-a14d-7f2392f7aff8","previousPostId":"a279df28-c158-5048-b8a9-9e93c7da418b","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}